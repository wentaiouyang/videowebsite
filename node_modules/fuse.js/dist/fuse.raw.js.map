{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/search/index.js","webpack:///./src/search/bitap-search/index.js","webpack:///./src/search/bitap-search/bitap-search.js","webpack:///./src/search/bitap-search/bitap-score.js","webpack:///./src/search/bitap-search/bitap-matched-indices.js","webpack:///./src/search/bitap-search/bitap-pattern-alphabet.js","webpack:///./src/search/bitap-search/constants.js","webpack:///./src/search/extended-search/index.js","webpack:///./src/search/extended-search/exact-match.js","webpack:///./src/search/extended-search/inverse-exact-match.js","webpack:///./src/search/extended-search/prefix-exact-match.js","webpack:///./src/search/extended-search/inverse-prefix-exact-match.js","webpack:///./src/search/extended-search/suffix-exact-match.js","webpack:///./src/search/extended-search/inverse-suffix-exact-match.js","webpack:///./src/helpers/type-checkers.js","webpack:///./src/search/ngram-search/index.js","webpack:///./src/search/ngram-search/ngram.js","webpack:///./src/search/ngram-search/distance/index.js","webpack:///./src/search/ngram-search/distance/jaccard-distance.js","webpack:///./src/search/ngram-search/array-utils/index.js","webpack:///./src/search/ngram-search/array-utils/union.js","webpack:///./src/search/ngram-search/array-utils/intersection.js","webpack:///./src/helpers/get.js","webpack:///./src/tools/index.js","webpack:///./src/tools/create-index.js","webpack:///./src/tools/key-store.js","webpack:///./src/transform/index.js","webpack:///./src/transform/transform-matches.js","webpack:///./src/transform/transform-score.js"],"names":["require","BitapSearch","ExtendedSearch","NGramSearch","isArray","isDefined","isString","isNumber","isObject","get","createIndex","KeyStore","transformMatches","transformScore","MAX_BITS","FuseOptions","isCaseSensitive","distance","findAllMatches","getFn","includeMatches","includeScore","keys","location","minMatchCharLength","shouldSort","sortFn","a","b","score","threshold","useExtendedSearch","Fuse","list","options","index","caseSensitive","_processKeys","setCollection","listIsStringArray","setIndex","_createIndex","listIndex","_indexedList","_keyStore","verbose","pattern","opts","limit","searcher","length","results","_searchUsing","_computeScore","_sort","slice","_format","i","len","value","text","$","idx","searchResult","searchIn","isMatch","match","indices","matchedIndices","push","item","matches","keyNames","keysLen","count","j","key","k","arrItem","result","scoreLen","totalWeightedScore","keyWeight","weight","Number","EPSILON","Math","pow","sort","finalOutput","transformers","data","refIndex","module","exports","bitapSearch","patternAlphabet","Error","toLowerCase","searchInString","bitapScore","patternLen","textLen","expectedLocation","max","min","currentThreshold","bestLocation","indexOf","matchMask","errors","currentLocation","lastIndexOf","lastBitArr","finalScore","binMax","mask","binMin","binMid","floor","start","finish","bitArr","Array","charMatch","charAt","accuracy","proximity","abs","matchmask","end","exactMatch","inverseExactMatch","prefixExactMatch","inversePrefixExactMatch","suffixExactMatch","inverseSuffixExactMatch","queryfy","split","map","trim","query","_fuzzyCache","matchFound","qLen","parts","pLen","token","_search","isForPattern","sanitize","substr","sanitizedPattern","startsWith","endsWith","substring","INFINITY","Object","prototype","toString","call","baseToString","undefined","ngram","jaccardDistance","patternNgram","textNgram","ng","jacardResult","NGRAM_LEN","n","pad","nGrams","union","intersection","nGram1","nGram2","nGramUnion","nGramIntersection","arr1","arr2","item1","item2","obj","path","arr","_get","dotIndex","remaining","ngrams","indexedList","record","subRecords","stack","arrayIndex","pop","subRecord","arrLen","_keys","_keyNames","_length","totalWeight","hasOwnProperty","keyName","name","JSON","stringify"],"mappings":"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","file":"fuse.raw.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Fuse\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Fuse\"] = factory();\n\telse\n\t\troot[\"Fuse\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\nconst { BitapSearch, ExtendedSearch, NGramSearch } = require('./search')\nconst { isArray, isDefined, isString, isNumber, isObject } = require('./helpers/type-checkers')\nconst get = require('./helpers/get')\nconst { createIndex, KeyStore } = require('./tools')\nconst { transformMatches, transformScore } = require('./transform')\nconst { MAX_BITS } = require('./search/bitap-search/constants')\n\n// // Will print to the console. Useful for debugging.\n// function debug() {\n//   if (Fuse.verbose) {\n//     console.log(...arguments)\n//     // const util = require('util')\n//     // console.log(util.inspect(...arguments, false, null, true /* enable colors */))\n//   }\n// }\n\n// function debugTime(value) {\n//   if (Fuse.verboseTime) {\n//     console.time(value)\n//   }\n// }\n\n// function debugTimeEnd(value) {\n//   if (Fuse.verboseTime) {\n//     console.timeEnd(value)\n//   }\n// }\n\nlet FuseOptions = {\n  // When true, the algorithm continues searching to the end of the input even if a perfect\n  // match is found before the end of the same input.\n  isCaseSensitive: false,\n  // Determines how close the match must be to the fuzzy location (specified above).\n  // An exact letter match which is 'distance' characters away from the fuzzy location\n  // would score as a complete mismatch. A distance of '0' requires the match be at\n  // the exact location specified, a threshold of '1000' would require a perfect match\n  // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n  distance: 100,\n  // Minimum number of characters that must be matched before a result is considered a match\n  findAllMatches: false,\n  // The get function to use when fetching an object's properties.\n  // The default will search nested paths *ie foo.bar.baz*\n  getFn: get,\n  includeMatches: false,\n  includeScore: false,\n  // List of properties that will be searched. This also supports nested properties.\n  keys: [],\n  // Approximately where in the text is the pattern expected to be found?\n  location: 0,\n  // Minimum number of characters that must be matched before a result is considered a match\n  minMatchCharLength: 1,\n  // Whether to sort the result list, by score\n  shouldSort: true,\n  // Default sort function\n  sortFn: (a, b) => (a.score - b.score),\n  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match\n  // (of both letters and location), a threshold of '1.0' would match anything.\n  threshold: 0.6,\n  // Enabled extended-searching\n  useExtendedSearch: false\n}\n\nclass Fuse {\n  constructor(list, options = FuseOptions, index = null) {\n    this.options = { ...FuseOptions, ...options }\n    // `caseSensitive` is deprecated, use `isCaseSensitive` instead\n    this.options.isCaseSensitive = options.caseSensitive\n    delete this.options.caseSensitive\n\n    // debugTime('Constructing')\n    this._processKeys(this.options.keys)\n    this.setCollection(list, index)\n    // debugTimeEnd('Constructing')\n  }\n\n  setCollection(list, index = null) {\n    this.list = list\n    this.listIsStringArray = isString(list[0])\n\n    if (index) {\n      this.setIndex(index)\n    } else {\n      // debugTime('Process index')\n      this.setIndex(this._createIndex())\n      // debugTimeEnd('Process index')\n    }\n  }\n\n  setIndex(listIndex) {\n    this._indexedList = listIndex\n    // debug(listIndex)\n  }\n\n  _processKeys(keys) {\n    this._keyStore = new KeyStore(keys)\n\n    // debug('Process Keys')\n    if (Fuse.verbose) {\n      // debug(this._keyStore.toJSON())\n    }\n  }\n\n  _createIndex() {\n    return createIndex(this._keyStore.keys(), this.list, {\n      getFn: this.options.getFn\n    })\n  }\n\n  search(pattern, opts = { limit: false }) {\n    // debug(`--------- Search pattern: \"${pattern}\"`)\n    const { useExtendedSearch, shouldSort } = this.options\n\n    let searcher = null\n\n    if (useExtendedSearch) {\n      searcher = new ExtendedSearch(pattern, this.options)\n    } else if (pattern.length > MAX_BITS) {\n      searcher = new NGramSearch(pattern, this.options)\n    } else {\n      searcher = new BitapSearch(pattern, this.options)\n    }\n\n    // debugTime('Search time');\n    let results = this._searchUsing(searcher)\n    // debugTimeEnd('Search time');\n\n    // debugTime('Compute score time');\n    this._computeScore(results)\n    // debugTimeEnd('Compute score time');\n\n    if (shouldSort) {\n      this._sort(results)\n    }\n\n    if (opts.limit && isNumber(opts.limit)) {\n      results = results.slice(0, opts.limit)\n    }\n\n    return this._format(results)\n  }\n\n  _searchUsing(searcher) {\n    const list = this._indexedList\n    const results = []\n    const { includeMatches } = this.options\n\n    // List is Array<String>\n    if (this.listIsStringArray) {\n      // Iterate over every string in the list\n      for (let i = 0, len = list.length; i < len; i += 1) {\n        let value = list[i]\n        let { $: text, idx } = value\n\n        if (!isDefined(text)) {\n          continue\n        }\n\n        let searchResult = searcher.searchIn(value)\n\n        const { isMatch, score } = searchResult\n\n        if (!isMatch) {\n          continue\n        }\n\n        let match = { score, value: text }\n\n        if (includeMatches) {\n          match.indices = searchResult.matchedIndices\n        }\n\n        results.push({\n          item: text,\n          idx,\n          matches: [match]\n        })\n      }\n\n    } else {\n      // List is Array<Object>\n      const keyNames = this._keyStore.keys()\n      const keysLen = this._keyStore.count()\n\n      for (let i = 0, len = list.length; i < len; i += 1) {\n        let { $: item, idx } = list[i]\n\n        if (!isDefined(item)) {\n          continue\n        }\n\n        let matches = []\n\n        // Iterate over every key (i.e, path), and fetch the value at that key\n        for (let j = 0; j < keysLen; j += 1) {\n          let key = keyNames[j]\n          let value = item[key]\n\n          // debug(` Key: ${key === '' ? '--' : key}`)\n\n          if (!isDefined(value)) {\n            continue\n          }\n\n          if (isArray(value)) {\n            for (let k = 0, len = value.length; k < len; k += 1) {\n              let arrItem = value[k]\n              let text = arrItem.$\n              let idx = arrItem.idx\n\n              if (!isDefined(text)) {\n                continue\n              }\n\n              let searchResult = searcher.searchIn(arrItem)\n\n              const { isMatch, score } = searchResult\n\n              // debug(`Full text: \"${text}\", score: ${score}`)\n\n              if (!isMatch) {\n                continue\n              }\n\n              let match = { score, key, value: text, idx }\n\n              if (includeMatches) {\n                match.indices = searchResult.matchedIndices\n              }\n\n              matches.push(match)\n            }\n          } else {\n            let text = value.$\n            let searchResult = searcher.searchIn(value)\n\n            const { isMatch, score } = searchResult\n\n            // debug(`Full text: \"${text}\", score: ${score}`)\n\n            if (!isMatch) {\n              continue\n            }\n\n            let match = { score, key, value: text }\n\n            if (includeMatches) {\n              match.indices = searchResult.matchedIndices\n            }\n\n            matches.push(match)\n          }\n        }\n\n        if (matches.length) {\n          results.push({\n            idx,\n            item,\n            matches\n          })\n        }\n      }\n    }\n\n    // debug(\"--------- RESULTS -----------\")\n    // debug(results)\n    // debug(\"-----------------------------\")\n\n    return results\n  }\n\n  _computeScore(results) {\n    // debug('Computing score: ')\n\n    for (let i = 0, len = results.length; i < len; i += 1) {\n      const result = results[i]\n      const matches = result.matches\n      const scoreLen = matches.length\n\n      let totalWeightedScore = 1\n      // let bestScore = -1\n\n      for (let j = 0; j < scoreLen; j += 1) {\n        const item = matches[j]\n        const key = item.key\n        const keyWeight = this._keyStore.get(key, 'weight')\n        const weight = keyWeight > -1 ? keyWeight : 1\n        const score = item.score === 0 && keyWeight > -1\n          ? Number.EPSILON\n          : item.score\n\n        totalWeightedScore *= Math.pow(score, weight)\n\n        // Keep track of the best score.. just in case\n        // Actually, we're not really using it.. but need to think of a way to incorporate this\n        // bestScore = bestScore == -1 ? item.score : Math.min(bestScore, item.score)\n      }\n\n      result.score = totalWeightedScore\n      // result.$score = bestScore\n\n      // debug(result)\n    }\n  }\n\n  _sort(results) {\n    // debug('Sorting....')\n    results.sort(this.options.sortFn)\n  }\n\n  _format(results) {\n    const finalOutput = []\n\n    const { includeMatches, includeScore, } = this.options\n\n    // if (Fuse.verbose) {\n    //   let cache = []\n    //   debug('Output:', JSON.stringify(results, (key, value) => {\n    //     if (isObject(value) && isDefined(value)) {\n    //       if (cache.indexOf(value) !== -1) {\n    //         // Circular reference found, discard key\n    //         return\n    //       }\n    //       // Store value in our collection\n    //       cache.push(value)\n    //     }\n    //     return value\n    //   }, 2))\n    //   cache = null\n    // }\n\n    let transformers = []\n\n    if (includeMatches) transformers.push(transformMatches)\n    if (includeScore) transformers.push(transformScore)\n\n    // debug(\"===== RESULTS ======\")\n    // debug(results)\n    // debug(\"====================\")\n\n    for (let i = 0, len = results.length; i < len; i += 1) {\n      const result = results[i]\n\n      // debug('result', result)\n\n      const { idx } = result\n\n      const data = {\n        item: this.list[idx],\n        refIndex: idx\n      }\n\n      if (transformers.length) {\n        for (let j = 0, len = transformers.length; j < len; j += 1) {\n          transformers[j](result, data)\n        }\n      }\n\n\n      finalOutput.push(data)\n    }\n\n    return finalOutput\n  }\n}\n\nFuse.createIndex = createIndex\n\nmodule.exports = Fuse\n","module.exports = {\n  BitapSearch: require('./bitap-search'),\n  ExtendedSearch: require('./extended-search'),\n  NGramSearch: require('./ngram-search')\n}","const bitapSearch = require('./bitap-search')\nconst patternAlphabet = require('./bitap-pattern-alphabet')\nconst { MAX_BITS } = require('./constants')\n\nclass BitapSearch {\n  constructor(pattern, {\n    // Approximately where in the text is the pattern expected to be found?\n    location = 0,\n    // Determines how close the match must be to the fuzzy location (specified above).\n    // An exact letter match which is 'distance' characters away from the fuzzy location\n    // would score as a complete mismatch. A distance of '0' requires the match be at\n    // the exact location specified, a threshold of '1000' would require a perfect match\n    // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n    distance = 100,\n    // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match\n    // (of both letters and location), a threshold of '1.0' would match anything.\n    threshold = 0.6,\n    // Indicates whether comparisons should be case sensitive.\n    isCaseSensitive = false,\n    // When true, the algorithm continues searching to the end of the input even if a perfect\n    // match is found before the end of the same input.\n    findAllMatches = false,\n    // Minimum number of characters that must be matched before a result is considered a match\n    minMatchCharLength = 1,\n\n    includeMatches = false\n  }) {\n    this.options = {\n      location,\n      distance,\n      threshold,\n      isCaseSensitive,\n      findAllMatches,\n      includeMatches,\n      minMatchCharLength\n    }\n\n    if (pattern.length > MAX_BITS) {\n      throw new Error(`Pattern length exceeds max of ${MAX_BITS}.`);\n    }\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase()\n    this.patternAlphabet = patternAlphabet(this.pattern)\n  }\n\n  searchIn(value) {\n    let text = value.$\n    return this.searchInString(text)\n  }\n\n  searchInString(text) {\n    const { isCaseSensitive, includeMatches } = this.options\n\n    if (!isCaseSensitive) {\n      text = text.toLowerCase()\n    }\n\n    // Exact match\n    if (this.pattern === text) {\n      let result = {\n        isMatch: true,\n        score: 0\n      }\n\n      if (includeMatches) {\n        result.matchedIndices = [[0, text.length - 1]]\n      }\n\n      return result\n    }\n\n    // Otherwise, use Bitap algorithm\n    const { location, distance, threshold, findAllMatches, minMatchCharLength } = this.options\n    return bitapSearch(text, this.pattern, this.patternAlphabet, {\n      location,\n      distance,\n      threshold,\n      findAllMatches,\n      minMatchCharLength,\n      includeMatches\n    })\n  }\n}\n\nmodule.exports = BitapSearch\n","const bitapScore = require('./bitap-score')\nconst matchedIndices = require('./bitap-matched-indices')\n\nmodule.exports = (text, pattern, patternAlphabet, { location = 0, distance = 100, threshold = 0.6, findAllMatches = false, minMatchCharLength = 1, includeMatches = false }) => {\n  const patternLen = pattern.length\n  // Set starting location at beginning text and initialize the alphabet.\n  const textLen = text.length\n  // Handle the case when location > text.length\n  const expectedLocation = Math.max(0, Math.min(location, textLen))\n  // Highest score beyond which we give up.\n  let currentThreshold = threshold\n  // Is there a nearby exact match? (speedup)\n  let bestLocation = text.indexOf(pattern, expectedLocation)\n\n  // a mask of the matches\n  const matchMask = []\n  for (let i = 0; i < textLen; i += 1) {\n    matchMask[i] = 0\n  }\n\n  if (bestLocation !== -1) {\n    let score = bitapScore(pattern, {\n      errors: 0,\n      currentLocation: bestLocation,\n      expectedLocation,\n      distance\n    })\n    currentThreshold = Math.min(score, currentThreshold)\n\n    // What about in the other direction? (speed up)\n    bestLocation = text.lastIndexOf(pattern, expectedLocation + patternLen)\n\n    if (bestLocation !== -1) {\n      let score = bitapScore(pattern, {\n        errors: 0,\n        currentLocation: bestLocation,\n        expectedLocation,\n        distance\n      })\n      currentThreshold = Math.min(score, currentThreshold)\n    }\n  }\n\n  // Reset the best location\n  bestLocation = -1\n\n  let lastBitArr = []\n  let finalScore = 1\n  let binMax = patternLen + textLen\n\n  const mask = 1 << (patternLen <= 31 ? patternLen - 1 : 30)\n\n  for (let i = 0; i < patternLen; i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    let binMin = 0\n    let binMid = binMax\n\n    while (binMin < binMid) {\n      const score = bitapScore(pattern, {\n        errors: i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation,\n        distance\n      })\n\n      if (score <= currentThreshold) {\n        binMin = binMid\n      } else {\n        binMax = binMid\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin)\n    }\n\n    // Use the result from this iteration as the maximum for the next.\n    binMax = binMid\n\n    let start = Math.max(1, expectedLocation - binMid + 1)\n    let finish = findAllMatches ? textLen : Math.min(expectedLocation + binMid, textLen) + patternLen\n\n    // Initialize the bit array\n    let bitArr = Array(finish + 2)\n\n    bitArr[finish + 1] = (1 << i) - 1\n\n    for (let j = finish; j >= start; j -= 1) {\n      let currentLocation = j - 1\n      let charMatch = patternAlphabet[text.charAt(currentLocation)]\n\n      if (charMatch) {\n        matchMask[currentLocation] = 1\n      }\n\n      // First pass: exact match\n      bitArr[j] = ((bitArr[j + 1] << 1) | 1) & charMatch\n\n      // Subsequent passes: fuzzy match\n      if (i !== 0) {\n        bitArr[j] |= (((lastBitArr[j + 1] | lastBitArr[j]) << 1) | 1) | lastBitArr[j + 1]\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = bitapScore(pattern, {\n          errors: i,\n          currentLocation,\n          expectedLocation,\n          distance\n        })\n\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore\n          bestLocation = currentLocation\n\n          // Already passed `loc`, downhill from here on in.\n          if (bestLocation <= expectedLocation) {\n            break\n          }\n\n          // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n          start = Math.max(1, 2 * expectedLocation - bestLocation)\n        }\n      }\n    }\n\n    // No hope for a (better) match at greater error levels.\n    const score = bitapScore(pattern, {\n      errors: i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation,\n      distance\n    })\n\n    if (score > currentThreshold) {\n      break\n    }\n\n    lastBitArr = bitArr\n  }\n\n  let result = {\n    isMatch: bestLocation >= 0,\n    // Count exact matches (those with a score of 0) to be \"almost\" exact\n    score: !finalScore ? 0.001 : finalScore,\n  }\n\n  if (includeMatches) {\n    result.matchedIndices = matchedIndices(matchMask, minMatchCharLength)\n  }\n\n  return result\n}\n","module.exports = (pattern, { errors = 0, currentLocation = 0, expectedLocation = 0, distance = 100 }) => {\n  const accuracy = errors / pattern.length\n  const proximity = Math.abs(expectedLocation - currentLocation)\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy\n  }\n\n  return accuracy + (proximity / distance)\n}\n","module.exports = (matchmask = [], minMatchCharLength = 1) => {\n  let matchedIndices = []\n  let start = -1\n  let end = -1\n  let i = 0\n\n  for (let len = matchmask.length; i < len; i += 1) {\n    let match = matchmask[i]\n    if (match && start === -1) {\n      start = i\n    } else if (!match && start !== -1) {\n      end = i - 1\n      if ((end - start) + 1 >= minMatchCharLength) {\n        matchedIndices.push([start, end])\n      }\n      start = -1\n    }\n  }\n\n  // (i-1 - start) + 1 => i - start\n  if (matchmask[i - 1] && (i - start) >= minMatchCharLength) {\n    matchedIndices.push([start, i - 1]);\n  }\n\n  return matchedIndices\n}\n","module.exports = pattern => {\n  let mask = {}\n  let len = pattern.length\n\n  for (let i = 0; i < len; i += 1) {\n    mask[pattern.charAt(i)] = 0\n  }\n\n  for (let i = 0; i < len; i += 1) {\n    mask[pattern.charAt(i)] |= 1 << (len - i - 1)\n  }\n\n  return mask\n}","// Machine word size\nmodule.exports.MAX_BITS = 32","const exactMatch = require('./exact-match')\nconst inverseExactMatch = require('./inverse-exact-match')\nconst prefixExactMatch = require('./prefix-exact-match')\nconst inversePrefixExactMatch = require('./inverse-prefix-exact-match')\nconst suffixExactMatch = require('./suffix-exact-match')\nconst inverseSuffixExactMatch = require('./inverse-suffix-exact-match')\nconst BitapSearch = require('../bitap-search')\n\nconst { isString } = require('../../helpers/type-checkers')\n\n// Return a 2D array representation of the query, for simpler parsing.\n// Example:\n// \"^core go$ | rb$ | py$ xy$\" => [[\"^core\", \"go$\"], [\"rb$\"], [\"py$\", \"xy$\"]]\nconst queryfy = (pattern) => pattern.split('|').map(item => item.trim().split(/ +/g))\n\n/**\n * Command-like searching\n * ======================\n *\n * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,\n * search in a given text.\n *\n * Search syntax:\n *\n * | Token       | Match type                 | Description                            |\n * | ----------- | -------------------------- | -------------------------------------- |\n * | `jscript`   | fuzzy-match                | Items that match `jscript`             |\n * | `'python`   | exact-match                | Items that include `python`            |\n * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |\n * | `^java`     | prefix-exact-match         | Items that start with `java`           |\n * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |\n * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |\n * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |\n *\n * A single pipe character acts as an OR operator. For example, the following\n * query matches entries that start with `core` and end with either`go`, `rb`,\n * or`py`.\n *\n * ```\n * ^core go$ | rb$ | py$\n * ```\n */\nclass ExtendedSearch {\n  constructor(pattern, options) {\n    const { isCaseSensitive } = options\n    this.query = null\n    this.options = options\n    // A <pattern>:<BitapSearch> key-value pair for optimizing searching\n    this._fuzzyCache = {}\n\n    if (isString(pattern) && pattern.trim().length > 0) {\n      this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase()\n      this.query = queryfy(this.pattern)\n    }\n  }\n\n  searchIn(value) {\n    const query = this.query\n\n    if (!this.query) {\n      return {\n        isMatch: false,\n        score: 1\n      }\n    }\n\n    let text = value.$\n\n    text = this.options.isCaseSensitive ? text : text.toLowerCase()\n\n    let matchFound = false\n\n    for (let i = 0, qLen = query.length; i < qLen; i += 1) {\n\n      const parts = query[i]\n      let result = null\n      matchFound = true\n\n      for (let j = 0, pLen = parts.length; j < pLen; j += 1) {\n        let token = parts[j]\n        result = this._search(token, text)\n        if (!result.isMatch) {\n          // AND condition, short-circuit and move on to next part\n          matchFound = false\n          break\n        }\n      }\n\n      // OR condition, so if TRUE, return\n      if (matchFound) {\n        return result\n      }\n    }\n\n    // Nothing was matched\n    return {\n      isMatch: false,\n      score: 1\n    }\n  }\n\n  _search(pattern, text) {\n    if (exactMatch.isForPattern(pattern)) {\n      return exactMatch.match(pattern, text)\n    } else if (prefixExactMatch.isForPattern(pattern)) {\n      return prefixExactMatch.match(pattern, text)\n    } else if (inversePrefixExactMatch.isForPattern(pattern)) {\n      return inversePrefixExactMatch.match(pattern, text)\n    } else if (inverseSuffixExactMatch.isForPattern(pattern)) {\n      return inverseSuffixExactMatch.match(pattern, text)\n    } else if (suffixExactMatch.isForPattern(pattern)) {\n      return suffixExactMatch.match(pattern, text)\n    } else if (inverseExactMatch.isForPattern(pattern)) {\n      return inverseExactMatch.match(pattern, text)\n    } else {\n      let searcher = this._fuzzyCache[pattern]\n      if (!searcher) {\n        searcher = new BitapSearch(pattern, this.options)\n        this._fuzzyCache[pattern] = searcher\n      }\n      return searcher.searchInString(text)\n    }\n  }\n}\n\nmodule.exports = ExtendedSearch","// Token: 'file\n// Match type: exact-match\n// Description: Items that include `file`\n\nconst isForPattern = pattern => pattern.charAt(0) == \"'\"\n\nconst sanitize = pattern => pattern.substr(1)\n\nconst match = (pattern, text) => {\n  const sanitizedPattern = sanitize(pattern)\n  const index = text.indexOf(sanitizedPattern)\n  const isMatch = index > -1\n\n  return {\n    isMatch,\n    score: 0,\n  }\n}\n\nmodule.exports = {\n  isForPattern,\n  sanitize,\n  match\n}","// Token: !fire\n// Match type: inverse-exact-match\n// Description: Items that do not include `fire`\n\nconst isForPattern = pattern => pattern.charAt(0) == '!'\n\nconst sanitize = pattern => pattern.substr(1)\n\nconst match = (pattern, text) => {\n  const sanitizedPattern = sanitize(pattern)\n  const isMatch = text.indexOf(sanitizedPattern) === -1\n\n  return {\n    isMatch,\n    score: 0\n  }\n}\n\nmodule.exports = {\n  isForPattern,\n  sanitize,\n  match\n}","// Token: ^file\n// Match type: prefix-exact-match\n// Description: Items that start with `file`\n\nconst isForPattern = pattern => pattern.charAt(0) == '^'\n\nconst sanitize = pattern => pattern.substr(1)\n\nconst match = (pattern, text) => {\n  const sanitizedPattern = sanitize(pattern)\n  const isMatch = text.startsWith(sanitizedPattern)\n\n  return {\n    isMatch,\n    score: 0\n  }\n}\n\nmodule.exports = {\n  isForPattern,\n  sanitize,\n  match\n}","// Token: !^fire\n// Match type: inverse-prefix-exact-match\n// Description: Items that do not start with `fire`\n\nconst isForPattern = pattern => pattern.charAt(0) == '!' && pattern.charAt(1) == '^'\n\nconst sanitize = pattern => pattern.substr(2)\n\nconst match = (pattern, text) => {\n  const sanitizedPattern = sanitize(pattern)\n  const isMatch = !text.startsWith(sanitizedPattern)\n\n  return {\n    isMatch,\n    score: 0\n  }\n}\n\nmodule.exports = {\n  isForPattern,\n  sanitize,\n  match\n}","// Token: .file$\n// Match type: suffix-exact-match\n// Description: Items that end with `.file`\n\nconst isForPattern = pattern => pattern.charAt(pattern.length - 1) == '$'\n\nconst sanitize = pattern => pattern.substr(0, pattern.length - 1)\n\nconst match = (pattern, text) => {\n  const sanitizedPattern = sanitize(pattern)\n  const isMatch = text.endsWith(sanitizedPattern)\n\n  return {\n    isMatch,\n    score: 0\n  }\n}\n\nmodule.exports = {\n  isForPattern,\n  sanitize,\n  match\n}","// Token: !.file$\n// Match type: inverse-suffix-exact-match\n// Description: Items that do not end with `.file`\n\nconst isForPattern = pattern => pattern.charAt(0) == '!' && pattern.charAt(pattern.length - 1) == '$'\n\nconst sanitize = pattern => pattern.substring(1, pattern.length - 1)\n\nconst match = (pattern, text) => {\n  const sanitizedPattern = sanitize(pattern)\n  const isMatch = !text.endsWith(sanitizedPattern)\n\n  return {\n    isMatch,\n    score: 0\n  }\n}\n\nmodule.exports = {\n  isForPattern,\n  sanitize,\n  match\n}","const INFINITY = 1 / 0\n\nconst isArray = value => !Array.isArray\n  ? Object.prototype.toString.call(value) === '[object Array]'\n  : Array.isArray(value)\n\n// Adapted from:\n// https://github.com/lodash/lodash/blob/f4ca396a796435422bd4fd41fadbd225edddf175/.internal/baseToString.js\nconst baseToString = value => {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  let result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nconst toString = value => value == null ? '' : baseToString(value);\n\nconst isString = value => typeof value === 'string'\n\nconst isNumber = value => typeof value === 'number'\n\nconst isObject = value => typeof value === 'object'\n\nconst isDefined = value => value !== undefined && value !== null\n\nmodule.exports = {\n  isDefined,\n  isArray,\n  isString,\n  isNumber,\n  isObject,\n  toString\n}\n","const ngram = require('./ngram')\nconst { jaccardDistance } = require('./distance')\n\nclass NGramSearch {\n  constructor(pattern, options = { threshold: 0.6 }) {\n    // Create the ngram, and sort it\n    this.options = options\n    this.patternNgram = ngram(pattern, { sort: true })\n  }\n  searchIn(value) {\n    let textNgram = value.ng\n    if (!textNgram) {\n      textNgram = ngram(value.$, { sort: true })\n      value.ng = textNgram\n    }\n\n    let jacardResult = jaccardDistance(this.patternNgram, textNgram)\n\n    const isMatch = jacardResult < this.options.threshold\n\n    return {\n      score: isMatch ? jacardResult : 1,\n      isMatch\n    }\n  }\n}\n\nmodule.exports = NGramSearch","const NGRAM_LEN = 3\n\nmodule.exports = (text, { n = NGRAM_LEN, pad = true, sort = false }) => {\n  let nGrams = []\n\n  if (text === null || text === undefined) {\n    return nGrams\n  }\n\n  text = text.toLowerCase()\n  if (pad) {\n    text = ` ${text} `\n  }\n\n  let index = text.length - n + 1\n  if (index < 1) {\n    return nGrams\n  }\n\n  while (index--) {\n    nGrams[index] = text.substr(index, n)\n  }\n\n  if (sort) {\n    nGrams.sort((a, b) => a == b ? 0 : a < b ? -1 : 1)\n  }\n\n  return nGrams\n}","module.exports = {\n  jaccardDistance: require('./jaccard-distance')\n}","const { union, intersection } = require('../array-utils')\n\nmodule.exports = (nGram1, nGram2) => {\n  let nGramUnion = union(nGram1, nGram2)\n  let nGramIntersection = intersection(nGram1, nGram2)\n\n  return 1 - nGramIntersection.length / nGramUnion.length\n}","module.exports = {\n  union: require('./union'),\n  intersection: require('./intersection')\n}","// Assumes arrays are sorted\nmodule.exports = (arr1, arr2) => {\n  let result = []\n  let i = 0\n  let j = 0\n\n  while (i < arr1.length && j < arr2.length) {\n    let item1 = arr1[i]\n    let item2 = arr2[j]\n\n    if (item1 < item2) {\n      result.push(item1)\n      i += 1\n    } else if (item2 < item1) {\n      result.push(item2)\n      j += 1\n    } else {\n      result.push(item2)\n      i += 1\n      j += 1\n    }\n  }\n\n  while (i < arr1.length) {\n    result.push(arr1[i])\n    i += 1\n  }\n\n  while (j < arr2.length) {\n    result.push(arr2[j])\n    j += 1\n  }\n\n  return result;\n}\n","// Assumes arrays are sorted\nmodule.exports = (arr1, arr2) => {\n  let result = []\n  let i = 0\n  let j = 0\n\n  while (i < arr1.length && j < arr2.length) {\n    let item1 = arr1[i]\n    let item2 = arr2[j]\n\n    if (item1 == item2) {\n      result.push(item1)\n      i += 1\n      j += 1\n    } else if (item1 < item2) {\n      i += 1\n    } else if (item1 > item2) {\n      j += 1\n    } else {\n      i += 1\n      j += 1\n    }\n  }\n\n  return result;\n}","const {\n  isDefined,\n  isString,\n  isNumber,\n  isArray,\n  toString\n} = require('./type-checkers')\n\nmodule.exports = (obj, path) => {\n  let list = []\n  let arr = false\n\n  const _get = (obj, path) => {\n    if (!path) {\n      // If there's no path left, we've gotten to the object we care about.\n      list.push(obj)\n    } else {\n      const dotIndex = path.indexOf('.')\n\n      let key = path\n      let remaining = null\n\n      if (dotIndex !== -1) {\n        key = path.slice(0, dotIndex)\n        remaining = path.slice(dotIndex + 1)\n      }\n\n      const value = obj[key]\n\n      if (isDefined(value)) {\n        if (!remaining && (isString(value) || isNumber(value))) {\n          list.push(toString(value))\n        } else if (isArray(value)) {\n          arr = true\n          // Search each item in the array.\n          for (let i = 0, len = value.length; i < len; i += 1) {\n            _get(value[i], remaining)\n          }\n        } else if (remaining) {\n          // An object. Recurse further.\n          _get(value, remaining)\n        }\n      }\n    }\n  }\n\n  _get(obj, path)\n\n  if (arr) {\n    return list\n  }\n\n  return list[0]\n}","module.exports = {\n  createIndex: require('./create-index'),\n  KeyStore: require('./key-store')\n}","const { isArray, isDefined, isString } = require('../helpers/type-checkers')\nconst get = require('../helpers/get')\nconst ngram = require('../search/ngram-search/ngram')\n\nmodule.exports = (keys, list, { getFn = get, ngrams = false } = {}) => {\n  let indexedList = []\n\n  // List is Array<String>\n  if (isString(list[0])) {\n    // Iterate over every string in the list\n    for (let i = 0, len = list.length; i < len; i += 1) {\n      const value = list[i]\n\n      if (isDefined(value)) {\n        // if (!isCaseSensitive) {\n        //   value = value.toLowerCase()\n        // }\n\n        let record = {\n          $: value,\n          idx: i\n        }\n\n        if (ngrams) {\n          record.ng = ngram(value, { sort: true })\n        }\n\n        indexedList.push(record)\n      }\n    }\n\n  } else {\n    // List is Array<Object>\n    const keysLen = keys.length\n\n    for (let i = 0, len = list.length; i < len; i += 1) {\n      let item = list[i]\n\n      let record = { idx: i, $: {} }\n\n      // Iterate over every key (i.e, path), and fetch the value at that key\n      for (let j = 0; j < keysLen; j += 1) {\n        let key = keys[j]\n        let value = getFn(item, key)\n\n        if (!isDefined(value)) {\n          continue\n        }\n\n        if (isArray(value)) {\n          let subRecords = []\n          const stack = [{ arrayIndex: -1, value }]\n\n          while (stack.length) {\n            const { arrayIndex, value } = stack.pop()\n\n            if (!isDefined(value)) {\n              continue\n            }\n\n            if (isString(value)) {\n\n              // if (!isCaseSensitive) {\n              //   v = v.toLowerCase()\n              // }\n\n              let subRecord = { $: value, idx: arrayIndex }\n\n              if (ngrams) {\n                subRecord.ng = ngram(value, { sort: true })\n              }\n\n              subRecords.push(subRecord)\n\n            } else if (isArray(value)) {\n              for (let k = 0, arrLen = value.length; k < arrLen; k += 1) {\n                stack.push({\n                  arrayIndex: k,\n                  value: value[k],\n                })\n              }\n            }\n          }\n          record.$[key] = subRecords\n        } else {\n          // if (!isCaseSensitive) {\n          //   value = value.toLowerCase()\n          // }\n\n          let subRecord = { $: value }\n\n          if (ngrams) {\n            subRecord.ng = ngram(value, { sort: true })\n          }\n\n          record.$[key] = subRecord\n        }\n      }\n\n      indexedList.push(record)\n    }\n  }\n\n  return indexedList\n}","const { isString } = require('../helpers/type-checkers')\n\nclass KeyStore {\n  constructor(keys) {\n    this._keys = {}\n    this._keyNames = []\n    this._length = keys.length\n\n    // Iterate over every key\n    if (keys.length && isString(keys[0])) {\n      for (let i = 0; i < this._length; i += 1) {\n        const key = keys[i]\n        this._keys[key] = {\n          weight: 1\n        }\n        this._keyNames.push(key)\n      }\n    } else {\n      let totalWeight = 0\n\n      for (let i = 0; i < this._length; i += 1) {\n        const key = keys[i]\n\n        if (!key.hasOwnProperty('name')) {\n          throw new Error('Missing \"name\" property in key object')\n        }\n\n        const keyName = key.name\n        this._keyNames.push(keyName)\n\n        if (!key.hasOwnProperty('weight')) {\n          throw new Error('Missing \"weight\" property in key object')\n        }\n\n        const weight = key.weight\n\n        if (weight <= 0 || weight >= 1) {\n          throw new Error('\"weight\" property in key must bein the range of (0, 1)')\n        }\n\n        this._keys[keyName] = {\n          weight\n        }\n\n        totalWeight += weight\n      }\n\n      // Normalize weights so that their sum is equal to 1\n      for (let i = 0; i < this._length; i += 1) {\n        const keyName = this._keyNames[i]\n        const keyWeight = this._keys[keyName].weight\n        this._keys[keyName].weight = keyWeight / totalWeight\n      }\n    }\n  }\n  get(key, name) {\n    return this._keys[key] ? this._keys[key][name] : -1\n  }\n  keys() {\n    return this._keyNames\n  }\n  count() {\n    return this._length\n  }\n  toJSON() {\n    return JSON.stringify(this._keys)\n  }\n}\n\nmodule.exports = KeyStore","module.exports = {\n  transformMatches: require('./transform-matches'),\n  transformScore: require('./transform-score')\n}","const { isArray, isDefined, isString, isNumber, isObject } = require('../helpers/type-checkers')\n\nmodule.exports = (result, data) => {\n  const matches = result.matches\n  data.matches = []\n\n  if (!isDefined(matches)) {\n    return\n  }\n\n  for (let i = 0, len = matches.length; i < len; i += 1) {\n    let match = matches[i]\n\n    if (!isDefined(match.indices) || match.indices.length === 0) {\n      continue\n    }\n\n    let obj = {\n      indices: match.indices,\n      value: match.value\n    }\n\n    if (match.key) {\n      obj.key = match.key\n    }\n\n    if (match.idx > -1) {\n      obj.refIndex = match.idx\n    }\n\n    data.matches.push(obj)\n  }\n}\n","module.exports = (result, data) => {\n  data.score = result.score\n}"],"sourceRoot":""}