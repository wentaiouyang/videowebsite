{"ast":null,"code":"import _classCallCheck from \"/Users/wentai/work space/wis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wentai/work space/wis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { dateISOString, xAmzDate, dateYMD } from \"./Date\";\n\nvar Policy = /*#__PURE__*/function () {\n  function Policy() {\n    _classCallCheck(this, Policy);\n  }\n\n  _createClass(Policy, null, [{\n    key: \"getPolicy\",\n    value: function getPolicy(config) {\n      var policy = function policy() {\n        return {\n          expiration: dateISOString,\n          conditions: [{\n            bucket: config.bucketName\n          }, [\"starts-with\", \"$key\", \"\".concat(config.dirName ? config.dirName + \"/\" : \"\")], {\n            acl: \"public-read\"\n          }, [\"starts-with\", \"$Content-Type\", \"\"], {\n            \"x-amz-meta-uuid\": \"14365123651274\"\n          }, {\n            \"x-amz-server-side-encryption\": \"AES256\"\n          }, [\"starts-with\", \"$x-amz-meta-tag\", \"\"], {\n            \"x-amz-credential\": \"\".concat(config.accessKeyId, \"/\").concat(dateYMD, \"/\").concat(config.region, \"/s3/aws4_request\")\n          }, {\n            \"x-amz-algorithm\": \"AWS4-HMAC-SHA256\"\n          }, {\n            \"x-amz-date\": xAmzDate\n          }]\n        };\n      }; //Returns a base64 policy;\n\n\n      return new Buffer(JSON.stringify(policy())).toString(\"base64\").replace(/\\n|\\r/, \"\");\n    }\n  }]);\n\n  return Policy;\n}();\n\nexport { Policy as default };\n;","map":{"version":3,"sources":["/Users/wentai/work space/wis/node_modules/react-s3/lib/Policy.js"],"names":["dateISOString","xAmzDate","dateYMD","Policy","config","policy","expiration","conditions","bucket","bucketName","dirName","acl","accessKeyId","region","Buffer","JSON","stringify","toString","replace"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,OAAlC,QAAiD,QAAjD;;IAEqBC,M;;;;;;;8BACAC,M,EAAQ;AACrB,UAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACjB,eAAO;AACHC,UAAAA,UAAU,EAAEN,aADT;AAEHO,UAAAA,UAAU,EAAE,CAAC;AAAEC,YAAAA,MAAM,EAAEJ,MAAM,CAACK;AAAjB,WAAD,EAAgC,CAAC,aAAD,EAAgB,MAAhB,YAA2BL,MAAM,CAACM,OAAP,GAAiBN,MAAM,CAACM,OAAP,GAAiB,GAAlC,GAAwC,EAAnE,EAAhC,EAA0G;AAAEC,YAAAA,GAAG,EAAE;AAAP,WAA1G,EAAkI,CAAC,aAAD,EAAgB,eAAhB,EAAiC,EAAjC,CAAlI,EAAwK;AAAE,+BAAmB;AAArB,WAAxK,EAAiN;AAAE,4CAAgC;AAAlC,WAAjN,EAA+P,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,EAAnC,CAA/P,EAAuS;AAC/S,0CAAuBP,MAAM,CAACQ,WAA9B,cAA6CV,OAA7C,cAAwDE,MAAM,CAACS,MAA/D;AAD+S,WAAvS,EAET;AAAE,+BAAmB;AAArB,WAFS,EAEkC;AAAE,0BAAcZ;AAAhB,WAFlC;AAFT,SAAP;AAMH,OAPD,CADqB,CASrB;;;AACA,aAAO,IAAIa,MAAJ,CAAWC,IAAI,CAACC,SAAL,CAAeX,MAAM,EAArB,CAAX,EAAqCY,QAArC,CAA8C,QAA9C,EAAwDC,OAAxD,CAAgE,OAAhE,EAAyE,EAAzE,CAAP;AACH;;;;;;SAZgBf,M;AAapB","sourcesContent":["import { dateISOString, xAmzDate, dateYMD } from \"./Date\";\n\nexport default class Policy {\n    static getPolicy(config) {\n        const policy = () => {\n            return {\n                expiration: dateISOString,\n                conditions: [{ bucket: config.bucketName }, [\"starts-with\", \"$key\", `${config.dirName ? config.dirName + \"/\" : \"\"}`], { acl: \"public-read\" }, [\"starts-with\", \"$Content-Type\", \"\"], { \"x-amz-meta-uuid\": \"14365123651274\" }, { \"x-amz-server-side-encryption\": \"AES256\" }, [\"starts-with\", \"$x-amz-meta-tag\", \"\"], {\n                    \"x-amz-credential\": `${config.accessKeyId}/${dateYMD}/${config.region}/s3/aws4_request`\n                }, { \"x-amz-algorithm\": \"AWS4-HMAC-SHA256\" }, { \"x-amz-date\": xAmzDate }]\n            };\n        };\n        //Returns a base64 policy;\n        return new Buffer(JSON.stringify(policy())).toString(\"base64\").replace(/\\n|\\r/, \"\");\n    }\n};"]},"metadata":{},"sourceType":"module"}