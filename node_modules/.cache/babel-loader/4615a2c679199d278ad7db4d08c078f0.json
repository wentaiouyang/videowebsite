{"ast":null,"code":"var _jsxFileName = \"/Users/violetwang/iCloud Drive (Archive)/Documents/Workspace/React/wis/src/pages/LoginPage.js\";\nimport React, { Component } from 'react';\nimport { observer } from 'mobx-react';\nimport LoginForm from '../components/LoginForm';\nimport SigninForm from '../components/SigninForm';\nimport SubmitButton from '../components/SubmitButton';\nimport UserStore from '../stores/UserStore';\nimport './LoginPage.css';\n\nclass LoginPage extends Component {\n  async componentDidMount() {\n    try {\n      let res = await fetch('/isLoggedIn', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    } catch (e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLogout() {\n    try {\n      let res = await fetch('/logout', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.username = '';\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    if (UserStore.loading) {\n      return React.createElement(\"div\", {\n        className: \"loginPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"please wait...\"));\n    } else {\n      if (UserStore.isLoggedIn) {\n        return React.createElement(\"div\", {\n          className: \"loginPage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Welcome \", UserStore.username, React.createElement(SubmitButton, {\n          text: 'Log out',\n          disabled: false,\n          onClick: () => this.doLogout(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        })));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"loginPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(LoginForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(SigninForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\n\nexport default observer(LoginPage);","map":{"version":3,"sources":["/Users/violetwang/iCloud Drive (Archive)/Documents/Workspace/React/wis/src/pages/LoginPage.js"],"names":["React","Component","observer","LoginForm","SigninForm","SubmitButton","UserStore","LoginPage","componentDidMount","res","fetch","method","headers","result","json","success","loading","isLoggedIn","username","e","doLogout","console","log","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {observer} from 'mobx-react';\nimport LoginForm from '../components/LoginForm';\nimport SigninForm from '../components/SigninForm';\nimport SubmitButton from '../components/SubmitButton';\nimport UserStore from '../stores/UserStore';\nimport './LoginPage.css'\n\n\nclass LoginPage extends Component {\n\n    async componentDidMount() {\n\n        try {\n            let res = await fetch('/isLoggedIn', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            let result = await res.json();\n\n            if (result && result.success) {\n                UserStore.loading = false;\n                UserStore.isLoggedIn = true;\n                UserStore.username = result.username;\n            }\n            else {\n                UserStore.loading = false;\n                UserStore.isLoggedIn = false;\n            }\n        }\n\n        catch(e) {\n            UserStore.loading = false;\n            UserStore.isLoggedIn = false;\n        }\n    }\n\n    async doLogout() {\n\n        try {\n            let res = await fetch('/logout', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            let result = await res.json();\n\n            if (result && result.success) {\n                UserStore.isLoggedIn = false;\n                UserStore.username = '';\n            }\n        }\n\n        catch(e) {\n            console.log(e)\n        }\n    }\n\n    render() {\n        if (UserStore.loading) {\n            return (\n                <div className = \"loginPage\">\n                    <div className = \"container\">please wait...</div>\n                </div>\n            );\n            \n        }\n        else {\n            if (UserStore.isLoggedIn) {\n                return (\n                    <div className = \"loginPage\">\n                        <div className = \"container\">\n                            Welcome {UserStore.username}\n                            <SubmitButton \n                                text = {'Log out'}\n                                disabled = {false}\n                                onClick = { () => this.doLogout()}\n                            />\n                        </div>\n                    </div>\n                );\n            }\n            return (\n                <div className = \"loginPage\">\n                    <div className = \"container\">\n                        <LoginForm />\n                        \n                    </div>\n                    <div>\n                    <SigninForm />\n                    </div>\n                </div>\n            );\n        }    \n    }\n}\n\nexport default observer(LoginPage);"]},"metadata":{},"sourceType":"module"}